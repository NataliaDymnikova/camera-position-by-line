% Generated using GBSolver generator Copyright Martin Bujnak,
% Zuzana Kukelova, Tomas Pajdla CTU Prague 2008.
% 
% Please refer to the following paper, when using this code :
%     Kukelova Z., Bujnak M., Pajdla T., Automatic Generator of Minimal Problem Solvers,
%     ECCV 2008, Marseille, France, October 12-18, 2008

function [r11, r12, r13, r21, r22, r23] = solver_get_r_equations_vanishing(l1_11, l2_11, l3_11, v11, v21)

	% precalculate polynomial equations coefficients
	c(1) = l1_11(2)*l2_11(1)*l3_11(1)*v21(1) - l1_11(1)*l2_11(1)*l3_11(2)*v11(1) - l1_11(1)*l2_11(2)*l3_11(2)*v11(2) + l1_11(2)*l2_11(2)*l3_11(1)*v21(2) - l1_11(1)*l2_11(3)*l3_11(1)*v11(1)*v21(2) + l1_11(1)*l2_11(3)*l3_11(1)*v11(2)*v21(1);
	c(2) = l1_11(2)*l2_11(1)*l3_11(2) + l1_11(1)*l2_11(3)*l3_11(2)*v11(2) - l1_11(2)*l2_11(2)*l3_11(1)*v21(3) + l1_11(1)*l2_11(1)*l3_11(1)*v11(1)*v21(1) + l1_11(1)*l2_11(2)*l3_11(1)*v11(2)*v21(1) + l1_11(1)*l2_11(3)*l3_11(1)*v11(1)*v21(3);
	c(3) = l1_11(1)*l2_11(2)*l3_11(2)*v11(3) - l1_11(2)*l2_11(1)*l3_11(2) - l1_11(2)*l2_11(3)*l3_11(1)*v21(2) - l1_11(1)*l2_11(1)*l3_11(1)*v11(1)*v21(1) - l1_11(1)*l2_11(2)*l3_11(1)*v11(1)*v21(2) - l1_11(1)*l2_11(3)*l3_11(1)*v11(3)*v21(1);
	c(4) = l1_11(1)*l2_11(3)*l3_11(2)*v11(1) - l1_11(2)*l2_11(1)*l3_11(1)*v21(3) - l1_11(2)*l2_11(2)*l3_11(2) - l1_11(1)*l2_11(1)*l3_11(1)*v11(1)*v21(2) - l1_11(1)*l2_11(2)*l3_11(1)*v11(2)*v21(2) - l1_11(1)*l2_11(3)*l3_11(1)*v11(2)*v21(3);
	c(5) = l1_11(2)*l2_11(1)*l3_11(1)*v21(1) - l1_11(1)*l2_11(1)*l3_11(2)*v11(1) - l1_11(1)*l2_11(3)*l3_11(2)*v11(3) + l1_11(2)*l2_11(3)*l3_11(1)*v21(3) + l1_11(1)*l2_11(2)*l3_11(1)*v11(1)*v21(3) - l1_11(1)*l2_11(2)*l3_11(1)*v11(3)*v21(1);
	c(6) = l1_11(2)*l2_11(2)*l3_11(2) + l1_11(1)*l2_11(1)*l3_11(2)*v11(3) - l1_11(2)*l2_11(3)*l3_11(1)*v21(1) + l1_11(1)*l2_11(1)*l3_11(1)*v11(2)*v21(1) + l1_11(1)*l2_11(2)*l3_11(1)*v11(2)*v21(2) + l1_11(1)*l2_11(3)*l3_11(1)*v11(3)*v21(2);
	c(7) = l1_11(2)*l2_11(3)*l3_11(2) + l1_11(1)*l2_11(2)*l3_11(2)*v11(1) - l1_11(2)*l2_11(1)*l3_11(1)*v21(2) + l1_11(1)*l2_11(1)*l3_11(1)*v11(1)*v21(3) + l1_11(1)*l2_11(2)*l3_11(1)*v11(3)*v21(2) + l1_11(1)*l2_11(3)*l3_11(1)*v11(3)*v21(3);
	c(8) = l1_11(1)*l2_11(1)*l3_11(2)*v11(2) - l1_11(2)*l2_11(3)*l3_11(2) - l1_11(2)*l2_11(2)*l3_11(1)*v21(1) - l1_11(1)*l2_11(1)*l3_11(1)*v11(3)*v21(1) - l1_11(1)*l2_11(2)*l3_11(1)*v11(2)*v21(3) - l1_11(1)*l2_11(3)*l3_11(1)*v11(3)*v21(3);
	c(9) = l1_11(2)*l2_11(2)*l3_11(1)*v21(2) - l1_11(1)*l2_11(2)*l3_11(2)*v11(2) - l1_11(1)*l2_11(3)*l3_11(2)*v11(3) + l1_11(2)*l2_11(3)*l3_11(1)*v21(3) - l1_11(1)*l2_11(1)*l3_11(1)*v11(2)*v21(3) + l1_11(1)*l2_11(1)*l3_11(1)*v11(3)*v21(2);
	c(10) = l1_11(3)*l2_11(2)*l3_11(2)*v11(1) - l1_11(3)*l2_11(1)*l3_11(2)*v11(2) + l1_11(3)*l2_11(1)*l3_11(1)*v11(3)*v21(1) + l1_11(3)*l2_11(2)*l3_11(1)*v11(3)*v21(2) - l1_11(3)*l2_11(3)*l3_11(1)*v11(1)*v21(1) - l1_11(3)*l2_11(3)*l3_11(1)*v11(2)*v21(2);
	c(11) = l1_11(3)*l2_11(1)*l3_11(2)*v11(3) - l1_11(3)*l2_11(3)*l3_11(2)*v11(1) + l1_11(3)*l2_11(1)*l3_11(1)*v11(2)*v21(1) - l1_11(3)*l2_11(2)*l3_11(1)*v11(1)*v21(1) - l1_11(3)*l2_11(2)*l3_11(1)*v11(3)*v21(3) + l1_11(3)*l2_11(3)*l3_11(1)*v11(2)*v21(3);
	c(12) = l1_11(3)*l2_11(3)*l3_11(2)*v11(2) - l1_11(3)*l2_11(2)*l3_11(2)*v11(3) - l1_11(3)*l2_11(1)*l3_11(1)*v11(2)*v21(2) - l1_11(3)*l2_11(1)*l3_11(1)*v11(3)*v21(3) + l1_11(3)*l2_11(2)*l3_11(1)*v11(1)*v21(2) + l1_11(3)*l2_11(3)*l3_11(1)*v11(1)*v21(3);
	c(13) = l1_11(2)*l2_11(1)*l3_11(3)*v21(2) - l1_11(2)*l2_11(2)*l3_11(3)*v21(1) - l1_11(1)*l2_11(1)*l3_11(3)*v11(1)*v21(3) - l1_11(1)*l2_11(2)*l3_11(3)*v11(2)*v21(3) + l1_11(1)*l2_11(3)*l3_11(3)*v11(1)*v21(1) + l1_11(1)*l2_11(3)*l3_11(3)*v11(2)*v21(2);
	c(14) = l1_11(2)*l2_11(3)*l3_11(3)*v21(1) - l1_11(2)*l2_11(1)*l3_11(3)*v21(3) - l1_11(1)*l2_11(1)*l3_11(3)*v11(1)*v21(2) + l1_11(1)*l2_11(2)*l3_11(3)*v11(1)*v21(1) + l1_11(1)*l2_11(2)*l3_11(3)*v11(3)*v21(3) - l1_11(1)*l2_11(3)*l3_11(3)*v11(3)*v21(2);
	c(15) = l1_11(2)*l2_11(2)*l3_11(3)*v21(3) - l1_11(2)*l2_11(3)*l3_11(3)*v21(2) + l1_11(1)*l2_11(1)*l3_11(3)*v11(2)*v21(2) + l1_11(1)*l2_11(1)*l3_11(3)*v11(3)*v21(3) - l1_11(1)*l2_11(2)*l3_11(3)*v11(2)*v21(1) - l1_11(1)*l2_11(3)*l3_11(3)*v11(3)*v21(1);
	c(16) = l1_11(3)*l2_11(1)*l3_11(3)*v11(3)*v21(2) - l1_11(3)*l2_11(1)*l3_11(3)*v11(2)*v21(3) + l1_11(3)*l2_11(2)*l3_11(3)*v11(1)*v21(3) - l1_11(3)*l2_11(2)*l3_11(3)*v11(3)*v21(1) - l1_11(3)*l2_11(3)*l3_11(3)*v11(1)*v21(2) + l1_11(3)*l2_11(3)*l3_11(3)*v11(2)*v21(1);
	c(17) = l1_11(5)*l2_11(4)*l3_11(4)*v21(1) - l1_11(4)*l2_11(4)*l3_11(5)*v11(1) - l1_11(4)*l2_11(5)*l3_11(5)*v11(2) + l1_11(5)*l2_11(5)*l3_11(4)*v21(2) - l1_11(4)*l2_11(6)*l3_11(4)*v11(1)*v21(2) + l1_11(4)*l2_11(6)*l3_11(4)*v11(2)*v21(1);
	c(18) = l1_11(5)*l2_11(4)*l3_11(5) + l1_11(4)*l2_11(6)*l3_11(5)*v11(2) - l1_11(5)*l2_11(5)*l3_11(4)*v21(3) + l1_11(4)*l2_11(4)*l3_11(4)*v11(1)*v21(1) + l1_11(4)*l2_11(5)*l3_11(4)*v11(2)*v21(1) + l1_11(4)*l2_11(6)*l3_11(4)*v11(1)*v21(3);
	c(19) = l1_11(4)*l2_11(5)*l3_11(5)*v11(3) - l1_11(5)*l2_11(4)*l3_11(5) - l1_11(5)*l2_11(6)*l3_11(4)*v21(2) - l1_11(4)*l2_11(4)*l3_11(4)*v11(1)*v21(1) - l1_11(4)*l2_11(5)*l3_11(4)*v11(1)*v21(2) - l1_11(4)*l2_11(6)*l3_11(4)*v11(3)*v21(1);
	c(20) = l1_11(4)*l2_11(6)*l3_11(5)*v11(1) - l1_11(5)*l2_11(4)*l3_11(4)*v21(3) - l1_11(5)*l2_11(5)*l3_11(5) - l1_11(4)*l2_11(4)*l3_11(4)*v11(1)*v21(2) - l1_11(4)*l2_11(5)*l3_11(4)*v11(2)*v21(2) - l1_11(4)*l2_11(6)*l3_11(4)*v11(2)*v21(3);
	c(21) = l1_11(5)*l2_11(4)*l3_11(4)*v21(1) - l1_11(4)*l2_11(4)*l3_11(5)*v11(1) - l1_11(4)*l2_11(6)*l3_11(5)*v11(3) + l1_11(5)*l2_11(6)*l3_11(4)*v21(3) + l1_11(4)*l2_11(5)*l3_11(4)*v11(1)*v21(3) - l1_11(4)*l2_11(5)*l3_11(4)*v11(3)*v21(1);
	c(22) = l1_11(5)*l2_11(5)*l3_11(5) + l1_11(4)*l2_11(4)*l3_11(5)*v11(3) - l1_11(5)*l2_11(6)*l3_11(4)*v21(1) + l1_11(4)*l2_11(4)*l3_11(4)*v11(2)*v21(1) + l1_11(4)*l2_11(5)*l3_11(4)*v11(2)*v21(2) + l1_11(4)*l2_11(6)*l3_11(4)*v11(3)*v21(2);
	c(23) = l1_11(5)*l2_11(6)*l3_11(5) + l1_11(4)*l2_11(5)*l3_11(5)*v11(1) - l1_11(5)*l2_11(4)*l3_11(4)*v21(2) + l1_11(4)*l2_11(4)*l3_11(4)*v11(1)*v21(3) + l1_11(4)*l2_11(5)*l3_11(4)*v11(3)*v21(2) + l1_11(4)*l2_11(6)*l3_11(4)*v11(3)*v21(3);
	c(24) = l1_11(4)*l2_11(4)*l3_11(5)*v11(2) - l1_11(5)*l2_11(6)*l3_11(5) - l1_11(5)*l2_11(5)*l3_11(4)*v21(1) - l1_11(4)*l2_11(4)*l3_11(4)*v11(3)*v21(1) - l1_11(4)*l2_11(5)*l3_11(4)*v11(2)*v21(3) - l1_11(4)*l2_11(6)*l3_11(4)*v11(3)*v21(3);
	c(25) = l1_11(5)*l2_11(5)*l3_11(4)*v21(2) - l1_11(4)*l2_11(5)*l3_11(5)*v11(2) - l1_11(4)*l2_11(6)*l3_11(5)*v11(3) + l1_11(5)*l2_11(6)*l3_11(4)*v21(3) - l1_11(4)*l2_11(4)*l3_11(4)*v11(2)*v21(3) + l1_11(4)*l2_11(4)*l3_11(4)*v11(3)*v21(2);
	c(26) = l1_11(6)*l2_11(5)*l3_11(5)*v11(1) - l1_11(6)*l2_11(4)*l3_11(5)*v11(2) + l1_11(6)*l2_11(4)*l3_11(4)*v11(3)*v21(1) + l1_11(6)*l2_11(5)*l3_11(4)*v11(3)*v21(2) - l1_11(6)*l2_11(6)*l3_11(4)*v11(1)*v21(1) - l1_11(6)*l2_11(6)*l3_11(4)*v11(2)*v21(2);
	c(27) = l1_11(6)*l2_11(4)*l3_11(5)*v11(3) - l1_11(6)*l2_11(6)*l3_11(5)*v11(1) + l1_11(6)*l2_11(4)*l3_11(4)*v11(2)*v21(1) - l1_11(6)*l2_11(5)*l3_11(4)*v11(1)*v21(1) - l1_11(6)*l2_11(5)*l3_11(4)*v11(3)*v21(3) + l1_11(6)*l2_11(6)*l3_11(4)*v11(2)*v21(3);
	c(28) = l1_11(6)*l2_11(6)*l3_11(5)*v11(2) - l1_11(6)*l2_11(5)*l3_11(5)*v11(3) - l1_11(6)*l2_11(4)*l3_11(4)*v11(2)*v21(2) - l1_11(6)*l2_11(4)*l3_11(4)*v11(3)*v21(3) + l1_11(6)*l2_11(5)*l3_11(4)*v11(1)*v21(2) + l1_11(6)*l2_11(6)*l3_11(4)*v11(1)*v21(3);
	c(29) = l1_11(5)*l2_11(4)*l3_11(6)*v21(2) - l1_11(5)*l2_11(5)*l3_11(6)*v21(1) - l1_11(4)*l2_11(4)*l3_11(6)*v11(1)*v21(3) - l1_11(4)*l2_11(5)*l3_11(6)*v11(2)*v21(3) + l1_11(4)*l2_11(6)*l3_11(6)*v11(1)*v21(1) + l1_11(4)*l2_11(6)*l3_11(6)*v11(2)*v21(2);
	c(30) = l1_11(5)*l2_11(6)*l3_11(6)*v21(1) - l1_11(5)*l2_11(4)*l3_11(6)*v21(3) - l1_11(4)*l2_11(4)*l3_11(6)*v11(1)*v21(2) + l1_11(4)*l2_11(5)*l3_11(6)*v11(1)*v21(1) + l1_11(4)*l2_11(5)*l3_11(6)*v11(3)*v21(3) - l1_11(4)*l2_11(6)*l3_11(6)*v11(3)*v21(2);
	c(31) = l1_11(5)*l2_11(5)*l3_11(6)*v21(3) - l1_11(5)*l2_11(6)*l3_11(6)*v21(2) + l1_11(4)*l2_11(4)*l3_11(6)*v11(2)*v21(2) + l1_11(4)*l2_11(4)*l3_11(6)*v11(3)*v21(3) - l1_11(4)*l2_11(5)*l3_11(6)*v11(2)*v21(1) - l1_11(4)*l2_11(6)*l3_11(6)*v11(3)*v21(1);
	c(32) = l1_11(6)*l2_11(4)*l3_11(6)*v11(3)*v21(2) - l1_11(6)*l2_11(4)*l3_11(6)*v11(2)*v21(3) + l1_11(6)*l2_11(5)*l3_11(6)*v11(1)*v21(3) - l1_11(6)*l2_11(5)*l3_11(6)*v11(3)*v21(1) - l1_11(6)*l2_11(6)*l3_11(6)*v11(1)*v21(2) + l1_11(6)*l2_11(6)*l3_11(6)*v11(2)*v21(1);
	c(33) = l1_11(8)*l2_11(7)*l3_11(7)*v21(1) - l1_11(7)*l2_11(7)*l3_11(8)*v11(1) - l1_11(7)*l2_11(8)*l3_11(8)*v11(2) + l1_11(8)*l2_11(8)*l3_11(7)*v21(2) - l1_11(7)*l2_11(9)*l3_11(7)*v11(1)*v21(2) + l1_11(7)*l2_11(9)*l3_11(7)*v11(2)*v21(1);
	c(34) = l1_11(8)*l2_11(7)*l3_11(8) + l1_11(7)*l2_11(9)*l3_11(8)*v11(2) - l1_11(8)*l2_11(8)*l3_11(7)*v21(3) + l1_11(7)*l2_11(7)*l3_11(7)*v11(1)*v21(1) + l1_11(7)*l2_11(8)*l3_11(7)*v11(2)*v21(1) + l1_11(7)*l2_11(9)*l3_11(7)*v11(1)*v21(3);
	c(35) = l1_11(7)*l2_11(8)*l3_11(8)*v11(3) - l1_11(8)*l2_11(7)*l3_11(8) - l1_11(8)*l2_11(9)*l3_11(7)*v21(2) - l1_11(7)*l2_11(7)*l3_11(7)*v11(1)*v21(1) - l1_11(7)*l2_11(8)*l3_11(7)*v11(1)*v21(2) - l1_11(7)*l2_11(9)*l3_11(7)*v11(3)*v21(1);
	c(36) = l1_11(7)*l2_11(9)*l3_11(8)*v11(1) - l1_11(8)*l2_11(7)*l3_11(7)*v21(3) - l1_11(8)*l2_11(8)*l3_11(8) - l1_11(7)*l2_11(7)*l3_11(7)*v11(1)*v21(2) - l1_11(7)*l2_11(8)*l3_11(7)*v11(2)*v21(2) - l1_11(7)*l2_11(9)*l3_11(7)*v11(2)*v21(3);
	c(37) = l1_11(8)*l2_11(7)*l3_11(7)*v21(1) - l1_11(7)*l2_11(7)*l3_11(8)*v11(1) - l1_11(7)*l2_11(9)*l3_11(8)*v11(3) + l1_11(8)*l2_11(9)*l3_11(7)*v21(3) + l1_11(7)*l2_11(8)*l3_11(7)*v11(1)*v21(3) - l1_11(7)*l2_11(8)*l3_11(7)*v11(3)*v21(1);
	c(38) = l1_11(8)*l2_11(8)*l3_11(8) + l1_11(7)*l2_11(7)*l3_11(8)*v11(3) - l1_11(8)*l2_11(9)*l3_11(7)*v21(1) + l1_11(7)*l2_11(7)*l3_11(7)*v11(2)*v21(1) + l1_11(7)*l2_11(8)*l3_11(7)*v11(2)*v21(2) + l1_11(7)*l2_11(9)*l3_11(7)*v11(3)*v21(2);
	c(39) = l1_11(8)*l2_11(9)*l3_11(8) + l1_11(7)*l2_11(8)*l3_11(8)*v11(1) - l1_11(8)*l2_11(7)*l3_11(7)*v21(2) + l1_11(7)*l2_11(7)*l3_11(7)*v11(1)*v21(3) + l1_11(7)*l2_11(8)*l3_11(7)*v11(3)*v21(2) + l1_11(7)*l2_11(9)*l3_11(7)*v11(3)*v21(3);
	c(40) = l1_11(7)*l2_11(7)*l3_11(8)*v11(2) - l1_11(8)*l2_11(9)*l3_11(8) - l1_11(8)*l2_11(8)*l3_11(7)*v21(1) - l1_11(7)*l2_11(7)*l3_11(7)*v11(3)*v21(1) - l1_11(7)*l2_11(8)*l3_11(7)*v11(2)*v21(3) - l1_11(7)*l2_11(9)*l3_11(7)*v11(3)*v21(3);
	c(41) = l1_11(8)*l2_11(8)*l3_11(7)*v21(2) - l1_11(7)*l2_11(8)*l3_11(8)*v11(2) - l1_11(7)*l2_11(9)*l3_11(8)*v11(3) + l1_11(8)*l2_11(9)*l3_11(7)*v21(3) - l1_11(7)*l2_11(7)*l3_11(7)*v11(2)*v21(3) + l1_11(7)*l2_11(7)*l3_11(7)*v11(3)*v21(2);
	c(42) = l1_11(9)*l2_11(8)*l3_11(8)*v11(1) - l1_11(9)*l2_11(7)*l3_11(8)*v11(2) + l1_11(9)*l2_11(7)*l3_11(7)*v11(3)*v21(1) + l1_11(9)*l2_11(8)*l3_11(7)*v11(3)*v21(2) - l1_11(9)*l2_11(9)*l3_11(7)*v11(1)*v21(1) - l1_11(9)*l2_11(9)*l3_11(7)*v11(2)*v21(2);
	c(43) = l1_11(9)*l2_11(7)*l3_11(8)*v11(3) - l1_11(9)*l2_11(9)*l3_11(8)*v11(1) + l1_11(9)*l2_11(7)*l3_11(7)*v11(2)*v21(1) - l1_11(9)*l2_11(8)*l3_11(7)*v11(1)*v21(1) - l1_11(9)*l2_11(8)*l3_11(7)*v11(3)*v21(3) + l1_11(9)*l2_11(9)*l3_11(7)*v11(2)*v21(3);
	c(44) = l1_11(9)*l2_11(9)*l3_11(8)*v11(2) - l1_11(9)*l2_11(8)*l3_11(8)*v11(3) - l1_11(9)*l2_11(7)*l3_11(7)*v11(2)*v21(2) - l1_11(9)*l2_11(7)*l3_11(7)*v11(3)*v21(3) + l1_11(9)*l2_11(8)*l3_11(7)*v11(1)*v21(2) + l1_11(9)*l2_11(9)*l3_11(7)*v11(1)*v21(3);
	c(45) = l1_11(8)*l2_11(7)*l3_11(9)*v21(2) - l1_11(8)*l2_11(8)*l3_11(9)*v21(1) - l1_11(7)*l2_11(7)*l3_11(9)*v11(1)*v21(3) - l1_11(7)*l2_11(8)*l3_11(9)*v11(2)*v21(3) + l1_11(7)*l2_11(9)*l3_11(9)*v11(1)*v21(1) + l1_11(7)*l2_11(9)*l3_11(9)*v11(2)*v21(2);
	c(46) = l1_11(8)*l2_11(9)*l3_11(9)*v21(1) - l1_11(8)*l2_11(7)*l3_11(9)*v21(3) - l1_11(7)*l2_11(7)*l3_11(9)*v11(1)*v21(2) + l1_11(7)*l2_11(8)*l3_11(9)*v11(1)*v21(1) + l1_11(7)*l2_11(8)*l3_11(9)*v11(3)*v21(3) - l1_11(7)*l2_11(9)*l3_11(9)*v11(3)*v21(2);
	c(47) = l1_11(8)*l2_11(8)*l3_11(9)*v21(3) - l1_11(8)*l2_11(9)*l3_11(9)*v21(2) + l1_11(7)*l2_11(7)*l3_11(9)*v11(2)*v21(2) + l1_11(7)*l2_11(7)*l3_11(9)*v11(3)*v21(3) - l1_11(7)*l2_11(8)*l3_11(9)*v11(2)*v21(1) - l1_11(7)*l2_11(9)*l3_11(9)*v11(3)*v21(1);
	c(48) = l1_11(9)*l2_11(7)*l3_11(9)*v11(3)*v21(2) - l1_11(9)*l2_11(7)*l3_11(9)*v11(2)*v21(3) + l1_11(9)*l2_11(8)*l3_11(9)*v11(1)*v21(3) - l1_11(9)*l2_11(8)*l3_11(9)*v11(3)*v21(1) - l1_11(9)*l2_11(9)*l3_11(9)*v11(1)*v21(2) + l1_11(9)*l2_11(9)*l3_11(9)*v11(2)*v21(1);
	c(49) = l1_11(11)*l2_11(10)*l3_11(10)*v21(1) - l1_11(10)*l2_11(10)*l3_11(11)*v11(1) - l1_11(10)*l2_11(11)*l3_11(11)*v11(2) + l1_11(11)*l2_11(11)*l3_11(10)*v21(2) - l1_11(10)*l2_11(12)*l3_11(10)*v11(1)*v21(2) + l1_11(10)*l2_11(12)*l3_11(10)*v11(2)*v21(1);
	c(50) = l1_11(11)*l2_11(10)*l3_11(11) + l1_11(10)*l2_11(12)*l3_11(11)*v11(2) - l1_11(11)*l2_11(11)*l3_11(10)*v21(3) + l1_11(10)*l2_11(10)*l3_11(10)*v11(1)*v21(1) + l1_11(10)*l2_11(11)*l3_11(10)*v11(2)*v21(1) + l1_11(10)*l2_11(12)*l3_11(10)*v11(1)*v21(3);
	c(51) = l1_11(10)*l2_11(11)*l3_11(11)*v11(3) - l1_11(11)*l2_11(10)*l3_11(11) - l1_11(11)*l2_11(12)*l3_11(10)*v21(2) - l1_11(10)*l2_11(10)*l3_11(10)*v11(1)*v21(1) - l1_11(10)*l2_11(11)*l3_11(10)*v11(1)*v21(2) - l1_11(10)*l2_11(12)*l3_11(10)*v11(3)*v21(1);
	c(52) = l1_11(10)*l2_11(12)*l3_11(11)*v11(1) - l1_11(11)*l2_11(10)*l3_11(10)*v21(3) - l1_11(11)*l2_11(11)*l3_11(11) - l1_11(10)*l2_11(10)*l3_11(10)*v11(1)*v21(2) - l1_11(10)*l2_11(11)*l3_11(10)*v11(2)*v21(2) - l1_11(10)*l2_11(12)*l3_11(10)*v11(2)*v21(3);
	c(53) = l1_11(11)*l2_11(10)*l3_11(10)*v21(1) - l1_11(10)*l2_11(10)*l3_11(11)*v11(1) - l1_11(10)*l2_11(12)*l3_11(11)*v11(3) + l1_11(11)*l2_11(12)*l3_11(10)*v21(3) + l1_11(10)*l2_11(11)*l3_11(10)*v11(1)*v21(3) - l1_11(10)*l2_11(11)*l3_11(10)*v11(3)*v21(1);
	c(54) = l1_11(11)*l2_11(11)*l3_11(11) + l1_11(10)*l2_11(10)*l3_11(11)*v11(3) - l1_11(11)*l2_11(12)*l3_11(10)*v21(1) + l1_11(10)*l2_11(10)*l3_11(10)*v11(2)*v21(1) + l1_11(10)*l2_11(11)*l3_11(10)*v11(2)*v21(2) + l1_11(10)*l2_11(12)*l3_11(10)*v11(3)*v21(2);
	c(55) = l1_11(11)*l2_11(12)*l3_11(11) + l1_11(10)*l2_11(11)*l3_11(11)*v11(1) - l1_11(11)*l2_11(10)*l3_11(10)*v21(2) + l1_11(10)*l2_11(10)*l3_11(10)*v11(1)*v21(3) + l1_11(10)*l2_11(11)*l3_11(10)*v11(3)*v21(2) + l1_11(10)*l2_11(12)*l3_11(10)*v11(3)*v21(3);
	c(56) = l1_11(10)*l2_11(10)*l3_11(11)*v11(2) - l1_11(11)*l2_11(12)*l3_11(11) - l1_11(11)*l2_11(11)*l3_11(10)*v21(1) - l1_11(10)*l2_11(10)*l3_11(10)*v11(3)*v21(1) - l1_11(10)*l2_11(11)*l3_11(10)*v11(2)*v21(3) - l1_11(10)*l2_11(12)*l3_11(10)*v11(3)*v21(3);
	c(57) = l1_11(11)*l2_11(11)*l3_11(10)*v21(2) - l1_11(10)*l2_11(11)*l3_11(11)*v11(2) - l1_11(10)*l2_11(12)*l3_11(11)*v11(3) + l1_11(11)*l2_11(12)*l3_11(10)*v21(3) - l1_11(10)*l2_11(10)*l3_11(10)*v11(2)*v21(3) + l1_11(10)*l2_11(10)*l3_11(10)*v11(3)*v21(2);
	c(58) = l1_11(12)*l2_11(11)*l3_11(11)*v11(1) - l1_11(12)*l2_11(10)*l3_11(11)*v11(2) + l1_11(12)*l2_11(10)*l3_11(10)*v11(3)*v21(1) + l1_11(12)*l2_11(11)*l3_11(10)*v11(3)*v21(2) - l1_11(12)*l2_11(12)*l3_11(10)*v11(1)*v21(1) - l1_11(12)*l2_11(12)*l3_11(10)*v11(2)*v21(2);
	c(59) = l1_11(12)*l2_11(10)*l3_11(11)*v11(3) - l1_11(12)*l2_11(12)*l3_11(11)*v11(1) + l1_11(12)*l2_11(10)*l3_11(10)*v11(2)*v21(1) - l1_11(12)*l2_11(11)*l3_11(10)*v11(1)*v21(1) - l1_11(12)*l2_11(11)*l3_11(10)*v11(3)*v21(3) + l1_11(12)*l2_11(12)*l3_11(10)*v11(2)*v21(3);
	c(60) = l1_11(12)*l2_11(12)*l3_11(11)*v11(2) - l1_11(12)*l2_11(11)*l3_11(11)*v11(3) - l1_11(12)*l2_11(10)*l3_11(10)*v11(2)*v21(2) - l1_11(12)*l2_11(10)*l3_11(10)*v11(3)*v21(3) + l1_11(12)*l2_11(11)*l3_11(10)*v11(1)*v21(2) + l1_11(12)*l2_11(12)*l3_11(10)*v11(1)*v21(3);
	c(61) = l1_11(11)*l2_11(10)*l3_11(12)*v21(2) - l1_11(11)*l2_11(11)*l3_11(12)*v21(1) - l1_11(10)*l2_11(10)*l3_11(12)*v11(1)*v21(3) - l1_11(10)*l2_11(11)*l3_11(12)*v11(2)*v21(3) + l1_11(10)*l2_11(12)*l3_11(12)*v11(1)*v21(1) + l1_11(10)*l2_11(12)*l3_11(12)*v11(2)*v21(2);
	c(62) = l1_11(11)*l2_11(12)*l3_11(12)*v21(1) - l1_11(11)*l2_11(10)*l3_11(12)*v21(3) - l1_11(10)*l2_11(10)*l3_11(12)*v11(1)*v21(2) + l1_11(10)*l2_11(11)*l3_11(12)*v11(1)*v21(1) + l1_11(10)*l2_11(11)*l3_11(12)*v11(3)*v21(3) - l1_11(10)*l2_11(12)*l3_11(12)*v11(3)*v21(2);
	c(63) = l1_11(11)*l2_11(11)*l3_11(12)*v21(3) - l1_11(11)*l2_11(12)*l3_11(12)*v21(2) + l1_11(10)*l2_11(10)*l3_11(12)*v11(2)*v21(2) + l1_11(10)*l2_11(10)*l3_11(12)*v11(3)*v21(3) - l1_11(10)*l2_11(11)*l3_11(12)*v11(2)*v21(1) - l1_11(10)*l2_11(12)*l3_11(12)*v11(3)*v21(1);
	c(64) = l1_11(12)*l2_11(10)*l3_11(12)*v11(3)*v21(2) - l1_11(12)*l2_11(10)*l3_11(12)*v11(2)*v21(3) + l1_11(12)*l2_11(11)*l3_11(12)*v11(1)*v21(3) - l1_11(12)*l2_11(11)*l3_11(12)*v11(3)*v21(1) - l1_11(12)*l2_11(12)*l3_11(12)*v11(1)*v21(2) + l1_11(12)*l2_11(12)*l3_11(12)*v11(2)*v21(1);
	c(65) = l1_11(14)*l2_11(13)*l3_11(13)*v21(1) - l1_11(13)*l2_11(13)*l3_11(14)*v11(1) - l1_11(13)*l2_11(14)*l3_11(14)*v11(2) + l1_11(14)*l2_11(14)*l3_11(13)*v21(2) - l1_11(13)*l2_11(15)*l3_11(13)*v11(1)*v21(2) + l1_11(13)*l2_11(15)*l3_11(13)*v11(2)*v21(1);
	c(66) = l1_11(14)*l2_11(13)*l3_11(14) + l1_11(13)*l2_11(15)*l3_11(14)*v11(2) - l1_11(14)*l2_11(14)*l3_11(13)*v21(3) + l1_11(13)*l2_11(13)*l3_11(13)*v11(1)*v21(1) + l1_11(13)*l2_11(14)*l3_11(13)*v11(2)*v21(1) + l1_11(13)*l2_11(15)*l3_11(13)*v11(1)*v21(3);
	c(67) = l1_11(13)*l2_11(14)*l3_11(14)*v11(3) - l1_11(14)*l2_11(13)*l3_11(14) - l1_11(14)*l2_11(15)*l3_11(13)*v21(2) - l1_11(13)*l2_11(13)*l3_11(13)*v11(1)*v21(1) - l1_11(13)*l2_11(14)*l3_11(13)*v11(1)*v21(2) - l1_11(13)*l2_11(15)*l3_11(13)*v11(3)*v21(1);
	c(68) = l1_11(13)*l2_11(15)*l3_11(14)*v11(1) - l1_11(14)*l2_11(13)*l3_11(13)*v21(3) - l1_11(14)*l2_11(14)*l3_11(14) - l1_11(13)*l2_11(13)*l3_11(13)*v11(1)*v21(2) - l1_11(13)*l2_11(14)*l3_11(13)*v11(2)*v21(2) - l1_11(13)*l2_11(15)*l3_11(13)*v11(2)*v21(3);
	c(69) = l1_11(14)*l2_11(13)*l3_11(13)*v21(1) - l1_11(13)*l2_11(13)*l3_11(14)*v11(1) - l1_11(13)*l2_11(15)*l3_11(14)*v11(3) + l1_11(14)*l2_11(15)*l3_11(13)*v21(3) + l1_11(13)*l2_11(14)*l3_11(13)*v11(1)*v21(3) - l1_11(13)*l2_11(14)*l3_11(13)*v11(3)*v21(1);
	c(70) = l1_11(14)*l2_11(14)*l3_11(14) + l1_11(13)*l2_11(13)*l3_11(14)*v11(3) - l1_11(14)*l2_11(15)*l3_11(13)*v21(1) + l1_11(13)*l2_11(13)*l3_11(13)*v11(2)*v21(1) + l1_11(13)*l2_11(14)*l3_11(13)*v11(2)*v21(2) + l1_11(13)*l2_11(15)*l3_11(13)*v11(3)*v21(2);
	c(71) = l1_11(14)*l2_11(15)*l3_11(14) + l1_11(13)*l2_11(14)*l3_11(14)*v11(1) - l1_11(14)*l2_11(13)*l3_11(13)*v21(2) + l1_11(13)*l2_11(13)*l3_11(13)*v11(1)*v21(3) + l1_11(13)*l2_11(14)*l3_11(13)*v11(3)*v21(2) + l1_11(13)*l2_11(15)*l3_11(13)*v11(3)*v21(3);
	c(72) = l1_11(13)*l2_11(13)*l3_11(14)*v11(2) - l1_11(14)*l2_11(15)*l3_11(14) - l1_11(14)*l2_11(14)*l3_11(13)*v21(1) - l1_11(13)*l2_11(13)*l3_11(13)*v11(3)*v21(1) - l1_11(13)*l2_11(14)*l3_11(13)*v11(2)*v21(3) - l1_11(13)*l2_11(15)*l3_11(13)*v11(3)*v21(3);
	c(73) = l1_11(14)*l2_11(14)*l3_11(13)*v21(2) - l1_11(13)*l2_11(14)*l3_11(14)*v11(2) - l1_11(13)*l2_11(15)*l3_11(14)*v11(3) + l1_11(14)*l2_11(15)*l3_11(13)*v21(3) - l1_11(13)*l2_11(13)*l3_11(13)*v11(2)*v21(3) + l1_11(13)*l2_11(13)*l3_11(13)*v11(3)*v21(2);
	c(74) = l1_11(15)*l2_11(14)*l3_11(14)*v11(1) - l1_11(15)*l2_11(13)*l3_11(14)*v11(2) + l1_11(15)*l2_11(13)*l3_11(13)*v11(3)*v21(1) + l1_11(15)*l2_11(14)*l3_11(13)*v11(3)*v21(2) - l1_11(15)*l2_11(15)*l3_11(13)*v11(1)*v21(1) - l1_11(15)*l2_11(15)*l3_11(13)*v11(2)*v21(2);
	c(75) = l1_11(15)*l2_11(13)*l3_11(14)*v11(3) - l1_11(15)*l2_11(15)*l3_11(14)*v11(1) + l1_11(15)*l2_11(13)*l3_11(13)*v11(2)*v21(1) - l1_11(15)*l2_11(14)*l3_11(13)*v11(1)*v21(1) - l1_11(15)*l2_11(14)*l3_11(13)*v11(3)*v21(3) + l1_11(15)*l2_11(15)*l3_11(13)*v11(2)*v21(3);
	c(76) = l1_11(15)*l2_11(15)*l3_11(14)*v11(2) - l1_11(15)*l2_11(14)*l3_11(14)*v11(3) - l1_11(15)*l2_11(13)*l3_11(13)*v11(2)*v21(2) - l1_11(15)*l2_11(13)*l3_11(13)*v11(3)*v21(3) + l1_11(15)*l2_11(14)*l3_11(13)*v11(1)*v21(2) + l1_11(15)*l2_11(15)*l3_11(13)*v11(1)*v21(3);
	c(77) = l1_11(14)*l2_11(13)*l3_11(15)*v21(2) - l1_11(14)*l2_11(14)*l3_11(15)*v21(1) - l1_11(13)*l2_11(13)*l3_11(15)*v11(1)*v21(3) - l1_11(13)*l2_11(14)*l3_11(15)*v11(2)*v21(3) + l1_11(13)*l2_11(15)*l3_11(15)*v11(1)*v21(1) + l1_11(13)*l2_11(15)*l3_11(15)*v11(2)*v21(2);
	c(78) = l1_11(14)*l2_11(15)*l3_11(15)*v21(1) - l1_11(14)*l2_11(13)*l3_11(15)*v21(3) - l1_11(13)*l2_11(13)*l3_11(15)*v11(1)*v21(2) + l1_11(13)*l2_11(14)*l3_11(15)*v11(1)*v21(1) + l1_11(13)*l2_11(14)*l3_11(15)*v11(3)*v21(3) - l1_11(13)*l2_11(15)*l3_11(15)*v11(3)*v21(2);
	c(79) = l1_11(14)*l2_11(14)*l3_11(15)*v21(3) - l1_11(14)*l2_11(15)*l3_11(15)*v21(2) + l1_11(13)*l2_11(13)*l3_11(15)*v11(2)*v21(2) + l1_11(13)*l2_11(13)*l3_11(15)*v11(3)*v21(3) - l1_11(13)*l2_11(14)*l3_11(15)*v11(2)*v21(1) - l1_11(13)*l2_11(15)*l3_11(15)*v11(3)*v21(1);
	c(80) = l1_11(15)*l2_11(13)*l3_11(15)*v11(3)*v21(2) - l1_11(15)*l2_11(13)*l3_11(15)*v11(2)*v21(3) + l1_11(15)*l2_11(14)*l3_11(15)*v11(1)*v21(3) - l1_11(15)*l2_11(14)*l3_11(15)*v11(3)*v21(1) - l1_11(15)*l2_11(15)*l3_11(15)*v11(1)*v21(2) + l1_11(15)*l2_11(15)*l3_11(15)*v11(2)*v21(1);
	c(81) = l1_11(17)*l2_11(16)*l3_11(16)*v21(1) - l1_11(16)*l2_11(16)*l3_11(17)*v11(1) - l1_11(16)*l2_11(17)*l3_11(17)*v11(2) + l1_11(17)*l2_11(17)*l3_11(16)*v21(2) - l1_11(16)*l2_11(18)*l3_11(16)*v11(1)*v21(2) + l1_11(16)*l2_11(18)*l3_11(16)*v11(2)*v21(1);
	c(82) = l1_11(17)*l2_11(16)*l3_11(17) + l1_11(16)*l2_11(18)*l3_11(17)*v11(2) - l1_11(17)*l2_11(17)*l3_11(16)*v21(3) + l1_11(16)*l2_11(16)*l3_11(16)*v11(1)*v21(1) + l1_11(16)*l2_11(17)*l3_11(16)*v11(2)*v21(1) + l1_11(16)*l2_11(18)*l3_11(16)*v11(1)*v21(3);
	c(83) = l1_11(16)*l2_11(17)*l3_11(17)*v11(3) - l1_11(17)*l2_11(16)*l3_11(17) - l1_11(17)*l2_11(18)*l3_11(16)*v21(2) - l1_11(16)*l2_11(16)*l3_11(16)*v11(1)*v21(1) - l1_11(16)*l2_11(17)*l3_11(16)*v11(1)*v21(2) - l1_11(16)*l2_11(18)*l3_11(16)*v11(3)*v21(1);
	c(84) = l1_11(16)*l2_11(18)*l3_11(17)*v11(1) - l1_11(17)*l2_11(16)*l3_11(16)*v21(3) - l1_11(17)*l2_11(17)*l3_11(17) - l1_11(16)*l2_11(16)*l3_11(16)*v11(1)*v21(2) - l1_11(16)*l2_11(17)*l3_11(16)*v11(2)*v21(2) - l1_11(16)*l2_11(18)*l3_11(16)*v11(2)*v21(3);
	c(85) = l1_11(17)*l2_11(16)*l3_11(16)*v21(1) - l1_11(16)*l2_11(16)*l3_11(17)*v11(1) - l1_11(16)*l2_11(18)*l3_11(17)*v11(3) + l1_11(17)*l2_11(18)*l3_11(16)*v21(3) + l1_11(16)*l2_11(17)*l3_11(16)*v11(1)*v21(3) - l1_11(16)*l2_11(17)*l3_11(16)*v11(3)*v21(1);
	c(86) = l1_11(17)*l2_11(17)*l3_11(17) + l1_11(16)*l2_11(16)*l3_11(17)*v11(3) - l1_11(17)*l2_11(18)*l3_11(16)*v21(1) + l1_11(16)*l2_11(16)*l3_11(16)*v11(2)*v21(1) + l1_11(16)*l2_11(17)*l3_11(16)*v11(2)*v21(2) + l1_11(16)*l2_11(18)*l3_11(16)*v11(3)*v21(2);
	c(87) = l1_11(17)*l2_11(18)*l3_11(17) + l1_11(16)*l2_11(17)*l3_11(17)*v11(1) - l1_11(17)*l2_11(16)*l3_11(16)*v21(2) + l1_11(16)*l2_11(16)*l3_11(16)*v11(1)*v21(3) + l1_11(16)*l2_11(17)*l3_11(16)*v11(3)*v21(2) + l1_11(16)*l2_11(18)*l3_11(16)*v11(3)*v21(3);
	c(88) = l1_11(16)*l2_11(16)*l3_11(17)*v11(2) - l1_11(17)*l2_11(18)*l3_11(17) - l1_11(17)*l2_11(17)*l3_11(16)*v21(1) - l1_11(16)*l2_11(16)*l3_11(16)*v11(3)*v21(1) - l1_11(16)*l2_11(17)*l3_11(16)*v11(2)*v21(3) - l1_11(16)*l2_11(18)*l3_11(16)*v11(3)*v21(3);
	c(89) = l1_11(17)*l2_11(17)*l3_11(16)*v21(2) - l1_11(16)*l2_11(17)*l3_11(17)*v11(2) - l1_11(16)*l2_11(18)*l3_11(17)*v11(3) + l1_11(17)*l2_11(18)*l3_11(16)*v21(3) - l1_11(16)*l2_11(16)*l3_11(16)*v11(2)*v21(3) + l1_11(16)*l2_11(16)*l3_11(16)*v11(3)*v21(2);
	c(90) = l1_11(18)*l2_11(17)*l3_11(17)*v11(1) - l1_11(18)*l2_11(16)*l3_11(17)*v11(2) + l1_11(18)*l2_11(16)*l3_11(16)*v11(3)*v21(1) + l1_11(18)*l2_11(17)*l3_11(16)*v11(3)*v21(2) - l1_11(18)*l2_11(18)*l3_11(16)*v11(1)*v21(1) - l1_11(18)*l2_11(18)*l3_11(16)*v11(2)*v21(2);
	c(91) = l1_11(18)*l2_11(16)*l3_11(17)*v11(3) - l1_11(18)*l2_11(18)*l3_11(17)*v11(1) + l1_11(18)*l2_11(16)*l3_11(16)*v11(2)*v21(1) - l1_11(18)*l2_11(17)*l3_11(16)*v11(1)*v21(1) - l1_11(18)*l2_11(17)*l3_11(16)*v11(3)*v21(3) + l1_11(18)*l2_11(18)*l3_11(16)*v11(2)*v21(3);
	c(92) = l1_11(18)*l2_11(18)*l3_11(17)*v11(2) - l1_11(18)*l2_11(17)*l3_11(17)*v11(3) - l1_11(18)*l2_11(16)*l3_11(16)*v11(2)*v21(2) - l1_11(18)*l2_11(16)*l3_11(16)*v11(3)*v21(3) + l1_11(18)*l2_11(17)*l3_11(16)*v11(1)*v21(2) + l1_11(18)*l2_11(18)*l3_11(16)*v11(1)*v21(3);
	c(93) = l1_11(17)*l2_11(16)*l3_11(18)*v21(2) - l1_11(17)*l2_11(17)*l3_11(18)*v21(1) - l1_11(16)*l2_11(16)*l3_11(18)*v11(1)*v21(3) - l1_11(16)*l2_11(17)*l3_11(18)*v11(2)*v21(3) + l1_11(16)*l2_11(18)*l3_11(18)*v11(1)*v21(1) + l1_11(16)*l2_11(18)*l3_11(18)*v11(2)*v21(2);
	c(94) = l1_11(17)*l2_11(18)*l3_11(18)*v21(1) - l1_11(17)*l2_11(16)*l3_11(18)*v21(3) - l1_11(16)*l2_11(16)*l3_11(18)*v11(1)*v21(2) + l1_11(16)*l2_11(17)*l3_11(18)*v11(1)*v21(1) + l1_11(16)*l2_11(17)*l3_11(18)*v11(3)*v21(3) - l1_11(16)*l2_11(18)*l3_11(18)*v11(3)*v21(2);
	c(95) = l1_11(17)*l2_11(17)*l3_11(18)*v21(3) - l1_11(17)*l2_11(18)*l3_11(18)*v21(2) + l1_11(16)*l2_11(16)*l3_11(18)*v11(2)*v21(2) + l1_11(16)*l2_11(16)*l3_11(18)*v11(3)*v21(3) - l1_11(16)*l2_11(17)*l3_11(18)*v11(2)*v21(1) - l1_11(16)*l2_11(18)*l3_11(18)*v11(3)*v21(1);
	c(96) = l1_11(18)*l2_11(16)*l3_11(18)*v11(3)*v21(2) - l1_11(18)*l2_11(16)*l3_11(18)*v11(2)*v21(3) + l1_11(18)*l2_11(17)*l3_11(18)*v11(1)*v21(3) - l1_11(18)*l2_11(17)*l3_11(18)*v11(3)*v21(1) - l1_11(18)*l2_11(18)*l3_11(18)*v11(1)*v21(2) + l1_11(18)*l2_11(18)*l3_11(18)*v11(2)*v21(1);

	M1 = zeros(6, 16);
	M1(49) = c(1);
	M1(31) = c(2);
	M1(43) = c(3);
	M1(13) = c(4);
	M1(25) = c(5);
	M1(37) = c(6);
	M1(7) = c(7);
	M1(19) = c(8);
	M1(1) = c(9);
	M1(85) = c(10);
	M1(79) = c(11);
	M1(73) = c(12);
	M1(67) = c(13);
	M1(61) = c(14);
	M1(55) = c(15);
	M1(91) = c(16);
	M1(50) = c(17);
	M1(32) = c(18);
	M1(44) = c(19);
	M1(14) = c(20);
	M1(26) = c(21);
	M1(38) = c(22);
	M1(8) = c(23);
	M1(20) = c(24);
	M1(2) = c(25);
	M1(86) = c(26);
	M1(80) = c(27);
	M1(74) = c(28);
	M1(68) = c(29);
	M1(62) = c(30);
	M1(56) = c(31);
	M1(92) = c(32);
	M1(51) = c(33);
	M1(33) = c(34);
	M1(45) = c(35);
	M1(15) = c(36);
	M1(27) = c(37);
	M1(39) = c(38);
	M1(9) = c(39);
	M1(21) = c(40);
	M1(3) = c(41);
	M1(87) = c(42);
	M1(81) = c(43);
	M1(75) = c(44);
	M1(69) = c(45);
	M1(63) = c(46);
	M1(57) = c(47);
	M1(93) = c(48);
	M1(52) = c(49);
	M1(34) = c(50);
	M1(46) = c(51);
	M1(16) = c(52);
	M1(28) = c(53);
	M1(40) = c(54);
	M1(10) = c(55);
	M1(22) = c(56);
	M1(4) = c(57);
	M1(88) = c(58);
	M1(82) = c(59);
	M1(76) = c(60);
	M1(70) = c(61);
	M1(64) = c(62);
	M1(58) = c(63);
	M1(94) = c(64);
	M1(53) = c(65);
	M1(35) = c(66);
	M1(47) = c(67);
	M1(17) = c(68);
	M1(29) = c(69);
	M1(41) = c(70);
	M1(11) = c(71);
	M1(23) = c(72);
	M1(5) = c(73);
	M1(89) = c(74);
	M1(83) = c(75);
	M1(77) = c(76);
	M1(71) = c(77);
	M1(65) = c(78);
	M1(59) = c(79);
	M1(95) = c(80);
	M1(54) = c(81);
	M1(36) = c(82);
	M1(48) = c(83);
	M1(18) = c(84);
	M1(30) = c(85);
	M1(42) = c(86);
	M1(12) = c(87);
	M1(24) = c(88);
	M1(6) = c(89);
	M1(90) = c(90);
	M1(84) = c(91);
	M1(78) = c(92);
	M1(72) = c(93);
	M1(66) = c(94);
	M1(60) = c(95);
	M1(96) = c(96);

	M1 = rref(M1);

	M2 = zeros(42, 64);
	M2(37:42, [43 44 45 47 48 49 52 53 54 58 59 60 61 62 63 64]) = M1(1:6, :);
	M2([1 44 129 256 635 1140]) = M1(1);
	M2([49 92 177 304 683 1188]) = M1(8);
	M2([139 182 225 352 731 1236]) = M1(15);
	M2([397 440 525 652 779 1284]) = M1(22);
	M2([445 488 573 700 827 1332]) = M1(29);
	M2([535 578 621 748 875 1380]) = M1(36);
	M2([883 926 1011 1138 1265 1392]) = M1(37);
	M2([889 932 1017 1144 1271 1398]) = M1(38);
	M2([895 938 1023 1150 1277 1404]) = M1(39);
	M2([901 944 1029 1156 1283 1410]) = M1(40);
	M2([907 950 1035 1162 1289 1416]) = M1(41);
	M2([913 956 1041 1168 1295 1422]) = M1(42);
	M2([925 968 1053 1180 1307 1434]) = M1(43);
	M2([931 974 1059 1186 1313 1440]) = M1(44);
	M2([937 980 1065 1192 1319 1446]) = M1(45);
	M2([943 986 1071 1198 1325 1452]) = M1(46);
	M2([949 992 1077 1204 1331 1458]) = M1(47);
	M2([955 998 1083 1210 1337 1464]) = M1(48);
	M2([1009 1052 1095 1222 1349 1476]) = M1(49);
	M2([1015 1058 1101 1228 1355 1482]) = M1(50);
	M2([1021 1064 1107 1234 1361 1488]) = M1(51);
	M2([1027 1070 1113 1240 1367 1494]) = M1(52);
	M2([1033 1076 1119 1246 1373 1500]) = M1(53);
	M2([1039 1082 1125 1252 1379 1506]) = M1(54);
	M2([1513 1556 1641 1768 1937 2148]) = M1(55);
	M2([1519 1562 1647 1774 1943 2154]) = M1(56);
	M2([1525 1568 1653 1780 1949 2160]) = M1(57);
	M2([1531 1574 1659 1786 1955 2166]) = M1(58);
	M2([1537 1580 1665 1792 1961 2172]) = M1(59);
	M2([1543 1586 1671 1798 1967 2178]) = M1(60);
	M2([1555 1598 1683 1810 1979 2190]) = M1(61);
	M2([1561 1604 1689 1816 1985 2196]) = M1(62);
	M2([1567 1610 1695 1822 1991 2202]) = M1(63);
	M2([1573 1616 1701 1828 1997 2208]) = M1(64);
	M2([1579 1622 1707 1834 2003 2214]) = M1(65);
	M2([1585 1628 1713 1840 2009 2220]) = M1(66);
	M2([1639 1682 1725 1852 2021 2232]) = M1(67);
	M2([1645 1688 1731 1858 2027 2238]) = M1(68);
	M2([1651 1694 1737 1864 2033 2244]) = M1(69);
	M2([1657 1700 1743 1870 2039 2250]) = M1(70);
	M2([1663 1706 1749 1876 2045 2256]) = M1(71);
	M2([1669 1712 1755 1882 2051 2262]) = M1(72);
	M2([1765 1808 1851 1894 2063 2274]) = M1(73);
	M2([1771 1814 1857 1900 2069 2280]) = M1(74);
	M2([1777 1820 1863 1906 2075 2286]) = M1(75);
	M2([1783 1826 1869 1912 2081 2292]) = M1(76);
	M2([1789 1832 1875 1918 2087 2298]) = M1(77);
	M2([1795 1838 1881 1924 2093 2304]) = M1(78);
	M2([1933 1976 2019 2062 2105 2316]) = M1(79);
	M2([1939 1982 2025 2068 2111 2322]) = M1(80);
	M2([1945 1988 2031 2074 2117 2328]) = M1(81);
	M2([1951 1994 2037 2080 2123 2334]) = M1(82);
	M2([1957 2000 2043 2086 2129 2340]) = M1(83);
	M2([1963 2006 2049 2092 2135 2346]) = M1(84);
	M2([2143 2186 2229 2272 2315 2358]) = M1(85);
	M2([2149 2192 2235 2278 2321 2364]) = M1(86);
	M2([2155 2198 2241 2284 2327 2370]) = M1(87);
	M2([2161 2204 2247 2290 2333 2376]) = M1(88);
	M2([2167 2210 2253 2296 2339 2382]) = M1(89);
	M2([2173 2216 2259 2302 2345 2388]) = M1(90);
	M2([2395 2438 2481 2524 2567 2610]) = M1(91);
	M2([2401 2444 2487 2530 2573 2616]) = M1(92);
	M2([2407 2450 2493 2536 2579 2622]) = M1(93);
	M2([2413 2456 2499 2542 2585 2628]) = M1(94);
	M2([2419 2462 2505 2548 2591 2634]) = M1(95);
	M2([2425 2468 2511 2554 2597 2640]) = M1(96);
	M2 = rref(M2);

	M3 = zeros(153, 180);
	M3(112:153, [107 108 109 110 111 112 113 114 115 117 118 119 120 121 122 123 124 125 127 128 129 132 133 134 135 136 137 138 139 140 142 143 144 147 148 149 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180]) = M2(1:42, :);
	M3([1 155 309 616 770 1077 1537 2456 5364 6742 9191 9345 9652 10112 11490 13327]) = M2(1801);
	M3([170 324 478 785 939 1246 1706 1860 2626 5534 6912 9361 9515 9822 10282 11660 13497]) = M2(1844);
	M3([646 800 954 1108 1262 1416 2029 2183 2337 2797 5705 7083 9685 9839 9993 10453 11831 13668]) = M2(1887);
	M3([2959 3113 3267 3574 3728 4035 4495 4649 4956 5416 5876 6795 7255 10622 10776 11083 11543 12003 13840]) = M2(1972);
	M3([3131 3285 3439 3746 3900 4207 4667 4821 5128 5588 6048 6202 6968 7428 10795 10949 11256 11716 12176 14013]) = M2(2015);
	M3([3610 3764 3918 4072 4226 4380 4993 5147 5301 5761 6374 6528 6682 7142 7602 11122 11276 11430 11890 12350 14187]) = M2(2058);
	M3([7651 7805 7959 8266 8420 8727 9187 10106 11484 11944 12404 12558 12865 13325 13785 14245]) = M2(2179);
	M3([7667 7821 7975 8282 8436 8743 9203 9357 10123 11501 11961 12421 12575 12882 13342 13802 14262]) = M2(2180);
	M3([7684 7838 7992 8299 8453 8760 9220 9374 9681 10141 11519 11979 12439 12593 12900 13360 13820 14280]) = M2(2181);
	M3([7702 7856 8010 8317 8471 8778 9238 9392 9699 10159 10619 11538 11998 12458 12612 12919 13379 13839 14299]) = M2(2182);
	M3([7721 7875 8029 8336 8490 8797 9257 9411 9718 10178 10638 10792 11558 12018 12478 12632 12939 13399 13859 14319]) = M2(2183);
	M3([7741 7895 8049 8356 8510 8817 9277 9431 9738 10198 10658 10812 11119 11579 12039 12499 12653 12960 13420 13880 14340]) = M2(2184);
	M3([7804 7958 8112 8419 8573 8880 9340 10259 11637 12097 12557 12711 13018 13478 13938 14398]) = M2(2221);
	M3([7820 7974 8128 8435 8589 8896 9356 9510 10276 11654 12114 12574 12728 13035 13495 13955 14415]) = M2(2222);
	M3([7837 7991 8145 8452 8606 8913 9373 9527 9834 10294 11672 12132 12592 12746 13053 13513 13973 14433]) = M2(2223);
	M3([7855 8009 8163 8470 8624 8931 9391 9545 9852 10312 10772 11691 12151 12611 12765 13072 13532 13992 14452]) = M2(2224);
	M3([7874 8028 8182 8489 8643 8950 9410 9564 9871 10331 10791 10945 11711 12171 12631 12785 13092 13552 14012 14472]) = M2(2225);
	M3([7894 8048 8202 8509 8663 8970 9430 9584 9891 10351 10811 10965 11272 11732 12192 12652 12806 13113 13573 14033 14493]) = M2(2226);
	M3([8263 8417 8571 8725 8879 9033 9646 10412 11790 12250 12863 13017 13171 13631 14091 14551]) = M2(2263);
	M3([8279 8433 8587 8741 8895 9049 9662 9816 10429 11807 12267 12880 13034 13188 13648 14108 14568]) = M2(2264);
	M3([8296 8450 8604 8758 8912 9066 9679 9833 9987 10447 11825 12285 12898 13052 13206 13666 14126 14586]) = M2(2265);
	M3([8314 8468 8622 8776 8930 9084 9697 9851 10005 10465 11078 11844 12304 12917 13071 13225 13685 14145 14605]) = M2(2266);
	M3([8333 8487 8641 8795 8949 9103 9716 9870 10024 10484 11097 11251 11864 12324 12937 13091 13245 13705 14165 14625]) = M2(2267);
	M3([8353 8507 8661 8815 8969 9123 9736 9890 10044 10504 11117 11271 11425 11885 12345 12958 13112 13266 13726 14186 14646]) = M2(2268);
	M3([14689 14843 14997 15304 15458 15765 16225 17144 18675 19288 20054 20208 20515 20975 21588 22354]) = M2(2431);
	M3([14705 14859 15013 15320 15474 15781 16241 16395 17161 18692 19305 20071 20225 20532 20992 21605 22371]) = M2(2432);
	M3([14722 14876 15030 15337 15491 15798 16258 16412 16719 17179 18710 19323 20089 20243 20550 21010 21623 22389]) = M2(2433);
	M3([14740 14894 15048 15355 15509 15816 16276 16430 16737 17197 17810 18729 19342 20108 20262 20569 21029 21642 22408]) = M2(2434);
	M3([14759 14913 15067 15374 15528 15835 16295 16449 16756 17216 17829 17983 18749 19362 20128 20282 20589 21049 21662 22428]) = M2(2435);
	M3([14779 14933 15087 15394 15548 15855 16315 16469 16776 17236 17849 18003 18310 18770 19383 20149 20303 20610 21070 21683 22449]) = M2(2436);
	M3([14842 14996 15150 15457 15611 15918 16378 17297 18828 19441 20207 20361 20668 21128 21741 22507]) = M2(2473);
	M3([14858 15012 15166 15473 15627 15934 16394 16548 17314 18845 19458 20224 20378 20685 21145 21758 22524]) = M2(2474);
	M3([14875 15029 15183 15490 15644 15951 16411 16565 16872 17332 18863 19476 20242 20396 20703 21163 21776 22542]) = M2(2475);
	M3([14893 15047 15201 15508 15662 15969 16429 16583 16890 17350 17963 18882 19495 20261 20415 20722 21182 21795 22561]) = M2(2476);
	M3([14912 15066 15220 15527 15681 15988 16448 16602 16909 17369 17982 18136 18902 19515 20281 20435 20742 21202 21815 22581]) = M2(2477);
	M3([14932 15086 15240 15547 15701 16008 16468 16622 16929 17389 18002 18156 18463 18923 19536 20302 20456 20763 21223 21836 22602]) = M2(2478);
	M3([15301 15455 15609 15763 15917 16071 16684 17450 18981 19594 20513 20667 20821 21281 21894 22660]) = M2(2515);
	M3([15317 15471 15625 15779 15933 16087 16700 16854 17467 18998 19611 20530 20684 20838 21298 21911 22677]) = M2(2516);
	M3([15334 15488 15642 15796 15950 16104 16717 16871 17025 17485 19016 19629 20548 20702 20856 21316 21929 22695]) = M2(2517);
	M3([15352 15506 15660 15814 15968 16122 16735 16889 17043 17503 18269 19035 19648 20567 20721 20875 21335 21948 22714]) = M2(2518);
	M3([15371 15525 15679 15833 15987 16141 16754 16908 17062 17522 18288 18442 19055 19668 20587 20741 20895 21355 21968 22734]) = M2(2519);
	M3([15391 15545 15699 15853 16007 16161 16774 16928 17082 17542 18308 18462 18616 19076 19689 20608 20762 20916 21376 21989 22755]) = M2(2520);
	M3([16219 16373 16527 16681 16835 16989 17143 17603 19134 19747 20972 21126 21280 21434 22047 22813]) = M2(2557);
	M3([16235 16389 16543 16697 16851 17005 17159 17313 17620 19151 19764 20989 21143 21297 21451 22064 22830]) = M2(2558);
	M3([16252 16406 16560 16714 16868 17022 17176 17330 17484 17638 19169 19782 21007 21161 21315 21469 22082 22848]) = M2(2559);
	M3([16270 16424 16578 16732 16886 17040 17194 17348 17502 17656 18728 19188 19801 21026 21180 21334 21488 22101 22867]) = M2(2560);
	M3([16289 16443 16597 16751 16905 17059 17213 17367 17521 17675 18747 18901 19208 19821 21046 21200 21354 21508 22121 22887]) = M2(2561);
	M3([16309 16463 16617 16771 16925 17079 17233 17387 17541 17695 18767 18921 19075 19229 19842 21067 21221 21375 21529 22142 22908]) = M2(2562);
	M3([17749 17903 18057 18211 18365 18519 18673 19133 19746 19900 21584 21738 21892 22046 22200 22966]) = M2(2599);
	M3([17765 17919 18073 18227 18381 18535 18689 18843 19150 19763 19917 21601 21755 21909 22063 22217 22983]) = M2(2600);
	M3([17782 17936 18090 18244 18398 18552 18706 18860 19014 19168 19781 19935 21619 21773 21927 22081 22235 23001]) = M2(2601);
	M3([17800 17954 18108 18262 18416 18570 18724 18878 19032 19186 19340 19800 19954 21638 21792 21946 22100 22254 23020]) = M2(2602);
	M3([17819 17973 18127 18281 18435 18589 18743 18897 19051 19205 19359 19513 19820 19974 21658 21812 21966 22120 22274 23040]) = M2(2603);
	M3([17839 17993 18147 18301 18455 18609 18763 18917 19071 19225 19379 19533 19687 19841 19995 21679 21833 21987 22141 22295 23061]) = M2(2604);
	M3([20044 20198 20352 20506 20660 20814 20968 21428 22041 22195 22349 22503 22657 22811 22965 23119]) = M2(2641);
	M3([20060 20214 20368 20522 20676 20830 20984 21138 21445 22058 22212 22366 22520 22674 22828 22982 23136]) = M2(2642);
	M3([20077 20231 20385 20539 20693 20847 21001 21155 21309 21463 22076 22230 22384 22538 22692 22846 23000 23154]) = M2(2643);
	M3([20095 20249 20403 20557 20711 20865 21019 21173 21327 21481 21635 22095 22249 22403 22557 22711 22865 23019 23173]) = M2(2644);
	M3([20114 20268 20422 20576 20730 20884 21038 21192 21346 21500 21654 21808 22115 22269 22423 22577 22731 22885 23039 23193]) = M2(2645);
	M3([20134 20288 20442 20596 20750 20904 21058 21212 21366 21520 21674 21828 21982 22136 22290 22444 22598 22752 22906 23060 23214]) = M2(2646);
	M3([23257 23411 23565 23719 23873 24027 24181 24641 25254 25408 25562 25716 25870 26024 26178 26332]) = M2(2683);
	M3([23273 23427 23581 23735 23889 24043 24197 24351 24658 25271 25425 25579 25733 25887 26041 26195 26349]) = M2(2684);
	M3([23290 23444 23598 23752 23906 24060 24214 24368 24522 24676 25289 25443 25597 25751 25905 26059 26213 26367]) = M2(2685);
	M3([23308 23462 23616 23770 23924 24078 24232 24386 24540 24694 24848 25308 25462 25616 25770 25924 26078 26232 26386]) = M2(2686);
	M3([23327 23481 23635 23789 23943 24097 24251 24405 24559 24713 24867 25021 25328 25482 25636 25790 25944 26098 26252 26406]) = M2(2687);
	M3([23347 23501 23655 23809 23963 24117 24271 24425 24579 24733 24887 25041 25195 25349 25503 25657 25811 25965 26119 26273 26427]) = M2(2688);
	M3 = rref(M3);

	M = zeros(105, 125);
	M(8:105, [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125]) = M3([7 8 9 10 19 22 23 24 25 26 27 28 29 36 37 38 45 46 47 48 49 50 53 54 55 56 57 58 59 60 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 106 107 108 111 113 114 115 116 117 118 119 120 121 123 124 125 128 129 130 131 132 133 134 135 136 138 139 140 142 143 144 150 151 152 153], [7 8 9 10 19 22 23 24 25 26 27 28 29 36 37 38 45 46 47 48 49 50 53 54 55 56 57 58 59 60 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 103 104 105 106 110 111 112 115 117 118 119 120 121 122 123 124 125 127 128 129 132 133 134 135 136 137 138 139 140 142 143 144 146 147 148 149 150 151 152 156 157 158 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180]);
	M([1 527 633 949 2315 2421 2737]) = M3(23709);
	M([106 737 843 1054 2525 2631 2842]) = M3(23862);
	M([211 842 948 1159 2630 2736 2947]) = M3(24015);
	M([316 1052 1158 1264 2840 2946 3052]) = M3(24168);
	M([421 1367 1473 1579 3470 3576 3682]) = M3(24780);
	M([1576 1682 1788 1894 4415 4521 4627]) = M3(25392);
	M([1891 1997 2103 2209 4730 4836 4942]) = M3(25545);
	M([3151 3782 3888 4099 5045 5151 5362]) = M3(25698);
	M([3256 3887 3993 4204 5150 5256 5467]) = M3(25851);
	M([3361 4097 4203 4309 5360 5466 5572]) = M3(26004);
	M([3676 4412 4518 4624 5675 5781 5887]) = M3(26157);
	M([4621 4727 4833 4939 5990 6096 6202]) = M3(26310);
	M([5881 5987 6093 6199 6305 6411 6517]) = M3(26463);
	M([7036 7457 7563 7774 8720 8826 9037]) = M3(26616);
	M([7141 7562 7668 7879 8825 8931 9142]) = M3(26769);
	M([7246 7772 7878 7984 9035 9141 9247]) = M3(26922);
	M([7351 8087 8193 8299 9350 9456 9562]) = M3(27075);
	M([8296 8402 8508 8614 9665 9771 9877]) = M3(27228);
	M([9556 9662 9768 9874 10085 10191 10297]) = M3(27381);
	M([11026 11237 11343 11449 11765 11871 11977]) = M3(27534);
	M = rref(M);

	A = zeros(20);
	amcols = [125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 107 105 104 103 102];
	A(1, 5) = 1;
	A(2, 11) = 1;
	A(3, :) = -M(105, amcols);
	A(4, :) = -M(102, amcols);
	A(5, 17) = 1;
	A(6, 18) = 1;
	A(7, 19) = 1;
	A(8, :) = -M(99, amcols);
	A(9, :) = -M(95, amcols);
	A(10, :) = -M(92, amcols);
	A(11, :) = -M(89, amcols);
	A(12, :) = -M(88, amcols);
	A(13, :) = -M(87, amcols);
	A(14, :) = -M(83, amcols);
	A(15, :) = -M(80, amcols);
	A(16, :) = -M(71, amcols);
	A(17, :) = -M(67, amcols);
	A(18, :) = -M(66, amcols);
	A(19, :) = -M(65, amcols);
	A(20, :) = -M(63, amcols);

	[V D] = eig(A);
	sol =  V([7, 6, 5, 4, 3, 2],:)./(ones(6, 1)*V(1,:));

	if (find(isnan(sol(:))) > 0)
		
		r11 = zeros(1, 0);
		r12 = zeros(1, 0);
		r13 = zeros(1, 0);
		r21 = zeros(1, 0);
		r22 = zeros(1, 0);
		r23 = zeros(1, 0);
	else
		
		I = find(not(imag( sol(1,:) )));
		r11 = sol(1,I);
		r12 = sol(2,I);
		r13 = sol(3,I);
		r21 = sol(4,I);
		r22 = sol(5,I);
		r23 = sol(6,I);
	end
end
